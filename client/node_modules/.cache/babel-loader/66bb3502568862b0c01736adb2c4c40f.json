{"ast":null,"code":"var _jsxFileName = \"/Users/rondoupo/Projects/truffle/blockword-drizzle-react/client/src/JoinGame.js\";\nimport React from \"react\";\n\nclass JoinGame extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKey: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props;\n    const contract = drizzle.contracts.BlockWord; // let drizzle know we want to watch the `roundTimerSecs` method\n\n    const dataKey = contract.methods[\"roundTimerSecs\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKey\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const {\n      BlockWord\n    } = this.props.drizzleState.contracts;\n    console.log(BlockWord); // using the saved `dataKey`, get the variable we're interested in\n\n    const roundTimerSecs = BlockWord.roundTimerSecs.call;\n    console.log(roundTimerSecs); // if it exists, then we display its value\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Round Timer Seconds: \", roundTimerSecs);\n  }\n\n}\n\nexport default JoinGame;","map":{"version":3,"sources":["/Users/rondoupo/Projects/truffle/blockword-drizzle-react/client/src/JoinGame.js"],"names":["React","JoinGame","Component","state","dataKey","componentDidMount","drizzle","props","contract","contracts","BlockWord","methods","cacheCall","setState","render","drizzleState","console","log","roundTimerSecs","call"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD6B;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,UAAMC,QAAQ,GAAGF,OAAO,CAACG,SAAR,CAAkBC,SAAnC,CAFkB,CAIlB;;AACA,UAAMN,OAAO,GAAGI,QAAQ,CAACG,OAAT,CAAiB,gBAAjB,EAAmCC,SAAnC,EAAhB,CALkB,CAOlB;;AACA,SAAKC,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAgB,KAAKH,KAAL,CAAWQ,YAAX,CAAwBN,SAA9C;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ,EAHO,CAIP;;AACA,UAAMQ,cAAc,GAAGR,SAAS,CAACQ,cAAV,CAAyBC,IAAhD;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ,EANO,CAQP;;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAyBA,cAAzB,CAAP;AACD;;AAxBoC;;AA2BvC,eAAejB,QAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass JoinGame extends React.Component {\r\n  state = { dataKey: null };\r\n\r\n  componentDidMount() {\r\n    const { drizzle } = this.props;\r\n    const contract = drizzle.contracts.BlockWord;\r\n\r\n    // let drizzle know we want to watch the `roundTimerSecs` method\r\n    const dataKey = contract.methods[\"roundTimerSecs\"].cacheCall();\r\n\r\n    // save the `dataKey` to local component state for later reference\r\n    this.setState({ dataKey });\r\n  }\r\n\r\n  render() {\r\n    // get the contract state from drizzleState\r\n    const { BlockWord } = this.props.drizzleState.contracts;\r\n    console.log(BlockWord);\r\n    // using the saved `dataKey`, get the variable we're interested in\r\n    const roundTimerSecs = BlockWord.roundTimerSecs.call;\r\n    console.log(roundTimerSecs);\r\n    \r\n    // if it exists, then we display its value\r\n    return <p>Round Timer Seconds: {roundTimerSecs}</p>;\r\n  }\r\n}\r\n\r\nexport default JoinGame;"]},"metadata":{},"sourceType":"module"}