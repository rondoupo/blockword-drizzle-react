{"ast":null,"code":"import React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css'; // Load the ReadString.js file into our program\n\nimport ReadString from \"./ReadString\"; // Load SetString.js file to to Set the Stored String\n\nimport SetString from \"./SetString\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      drizzleState: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      drizzle\n    } = this.props; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n  /*\n    render() {\n      if (this.state.loading) return \"Bret is Loading Drizzle...\";\n      return <div className=\"App\">Drizzle is ready</div>;\n    }\n    */\n\n  /*\n    render() {\n      if (this.state.loading) return \"Loading Drizzle...\";\n      return (\n        <div className=\"App\">\n          <ReadString\n            drizzle={this.props.drizzle}\n            drizzleState={this.state.drizzleState}\n          />\n        </div>\n      );\n    }\n    */\n\n\n}\n\nexport { App };","map":{"version":3,"sources":["/Users/rondoupo/Projects/Truffle/drizzle-react-tut/client/src/App.js"],"names":["React","Component","ReadString","SetString","App","state","loading","drizzleState","componentDidMount","drizzle","props","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","componentWillUnmount"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAE;AAA/B,KADkB;AAAA;;AAG1BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB,CADkB,CAGlB;;AACA,SAAKC,WAAL,GAAmBF,OAAO,CAACG,KAAR,CAAcC,SAAd,CAAwB,MAAM;AAE/C;AACA,YAAMN,YAAY,GAAGE,OAAO,CAACG,KAAR,CAAcE,QAAd,EAArB,CAH+C,CAK/C;;AACA,UAAIP,YAAY,CAACQ,aAAb,CAA2BC,WAA/B,EAA4C;AAC1C,aAAKC,QAAL,CAAc;AAAEX,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA;AAAlB,SAAd;AACD;AACF,KATkB,CAAnB;AAUD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrB,SAAKP,WAAL;AACD;AAEH;;;;;;;AAOA;;;;;;;;;;;;;;;AA9B4B;;AA4C5B,SAAQP,GAAR","sourcesContent":["import React, {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n// Load the ReadString.js file into our program\nimport ReadString from \"./ReadString\";\n// Load SetString.js file to to Set the Stored String\nimport SetString from \"./SetString\";\n\nclass App extends Component {\n  state = { loading: true, drizzleState: null };\n\n  componentDidMount() {\n    const { drizzle } = this.props;\n\n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n\n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n  \n/*\n  render() {\n    if (this.state.loading) return \"Bret is Loading Drizzle...\";\n    return <div className=\"App\">Drizzle is ready</div>;\n  }\n  */\n\n/*\n  render() {\n    if (this.state.loading) return \"Loading Drizzle...\";\n    return (\n      <div className=\"App\">\n        <ReadString\n          drizzle={this.props.drizzle}\n          drizzleState={this.state.drizzleState}\n        />\n      </div>\n    );\n  }\n  */\n }\nexport {App};"]},"metadata":{},"sourceType":"module"}